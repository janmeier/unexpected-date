{"version":3,"file":"unexpected-date.min.js","sources":["lib/helpers.js","lib/unexpected-date.js"],"sourcesContent":["var exports = {};\n\nfunction isEqualDate(dateA, dateB) {\n    return (\n        dateA.getUTCFullYear() === dateB.getUTCFullYear()\n        && dateA.getUTCMonth() === dateB.getUTCMonth()\n        && dateA.getUTCDate() === dateB.getUTCDate()\n        && dateA.getTimezoneOffset() === dateB.getTimezoneOffset()\n    );\n}\nexports.isEqualDate = isEqualDate;\n\nfunction isEqualDateTime(dateA, dateB) {\n    return dateA.getTime() === dateB.getTime();\n}\nexports.isEqualDateTime = isEqualDateTime;\n\nfunction isAfter(dateA, dateB) {\n    return dateA.getTime() > dateB.getTime();\n}\nexports.isAfter = isAfter;\n\nfunction isBefore(dateA, dateB) {\n    return dateA.getTime() < dateB.getTime();\n}\nexports.isBefore = isBefore;\n\nfunction isBetween(date, start, end) {\n    return isAfter(date, start) && isBefore(date, end);\n}\nexports.isBetween = isBetween;\n\nmodule.exports = exports;\n","var helpers = require('./helpers');\n\nmodule.exports = {\n    name: 'unexpected-date',\n    installInto: function (expect) {\n        expect.addAssertion('<date> [not] to be after <date>', function (expect, subject, value) {\n            return expect(helpers.isAfter(subject, value), '[not] to be true');\n        });\n\n        expect.addAssertion('<date> [not] to be before <date>', function (expect, subject, value) {\n            return expect(helpers.isBefore(subject, value), '[not] to be true');\n        });\n\n        expect.addAssertion('<date> [not] to equal time <date>', function (expect, subject, value) {\n            return expect(helpers.isEqualDateTime(subject, value), '[not] to be true');\n        });\n\n        expect.addAssertion('<date> [not] to equal date <date>', function (expect, subject, value) {\n            return expect(helpers.isEqualDate(subject, value), '[not] to be true');\n        });\n\n        expect.addAssertion('<date> [not] to be same or after <date>', function (expect, subject, value) {\n            return expect(\n                helpers.isAfter(subject, value) || helpers.isEqualDateTime(subject, value),\n                '[not] to be true'\n            );\n        });\n\n        expect.addAssertion('<date> [not] to be same or before <date>', function (expect, subject, value) {\n            return expect(\n                helpers.isBefore(subject, value) || helpers.isEqualDateTime(subject, value),\n                '[not] to be true'\n            );\n        });\n\n        expect.addAssertion('<date> [not] to be between <date> <date>', function (expect, subject, start, end) {\n            return expect(\n                helpers.isBetween(subject, start, end),\n                '[not] to be true'\n            );\n        });\n    }\n};\n"],"names":["isAfter","dateA","dateB","getTime","isBefore","getUTCFullYear","getUTCMonth","getUTCDate","getTimezoneOffset","date","start","end","name","installInto","expect","addAssertion","subject","value","helpers","isEqualDateTime","isEqualDate","isBetween"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;0LAiBA,SAASA,EAAQC,EAAOC,GACpB,OAAOD,EAAME,UAAYD,EAAMC,UAInC,SAASC,EAASH,EAAOC,GACrB,OAAOD,EAAME,UAAYD,EAAMC,UAvBnC,MAoBkBH,IAKCI,4BAvBnB,SAAqBH,EAAOC,GACxB,OACID,EAAMI,mBAAqBH,EAAMG,kBAC9BJ,EAAMK,gBAAkBJ,EAAMI,eAC9BL,EAAMM,eAAiBL,EAAMK,cAC7BN,EAAMO,sBAAwBN,EAAMM,uCAK/C,SAAyBP,EAAOC,GAC5B,OAAOD,EAAME,YAAcD,EAAMC,gDAcrC,SAAmBM,EAAMC,EAAOC,GAC5B,OAAOX,EAAQS,EAAMC,IAAUN,EAASK,EAAME,KCzB9CC,KAAM,kBACNC,YAAa,SAAUC,GACnBA,EAAOC,aAAa,kCAAmC,SAAUD,EAAQE,EAASC,GAC9E,OAAOH,EAAOI,EAAQlB,QAAQgB,EAASC,GAAQ,sBAGnDH,EAAOC,aAAa,mCAAoC,SAAUD,EAAQE,EAASC,GAC/E,OAAOH,EAAOI,EAAQd,SAASY,EAASC,GAAQ,sBAGpDH,EAAOC,aAAa,oCAAqC,SAAUD,EAAQE,EAASC,GAChF,OAAOH,EAAOI,EAAQC,gBAAgBH,EAASC,GAAQ,sBAG3DH,EAAOC,aAAa,oCAAqC,SAAUD,EAAQE,EAASC,GAChF,OAAOH,EAAOI,EAAQE,YAAYJ,EAASC,GAAQ,sBAGvDH,EAAOC,aAAa,0CAA2C,SAAUD,EAAQE,EAASC,GACtF,OAAOH,EACHI,EAAQlB,QAAQgB,EAASC,IAAUC,EAAQC,gBAAgBH,EAASC,GACpE,sBAIRH,EAAOC,aAAa,2CAA4C,SAAUD,EAAQE,EAASC,GACvF,OAAOH,EACHI,EAAQd,SAASY,EAASC,IAAUC,EAAQC,gBAAgBH,EAASC,GACrE,sBAIRH,EAAOC,aAAa,2CAA4C,SAAUD,EAAQE,EAASN,EAAOC,GAC9F,OAAOG,EACHI,EAAQG,UAAUL,EAASN,EAAOC,GAClC"}